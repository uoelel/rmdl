---
title: "Research Methods in Developmental Linguistics -- Week 5"
subtitle: "Group-level effects: Intercepts"
author: "Dr Stefano Coretta"
institute: "University of Edinburgh"
format:
  mono-light-revealjs:
    theme: [default, custom.scss]
    history: false
execute: 
  echo: false
filters:
  - tachyonsextra
---

```{r setup, include=FALSE}
library(tidyverse)
theme_set(theme_light())

library(brms)
library(tidybayes)

options(ggplot2.discrete.fill = RColorBrewer::brewer.pal(8, "Dark2"))
options(ggplot2.discrete.colour = RColorBrewer::brewer.pal(8, "Dark2"))
options(show.signif.stars = FALSE)

my_seed <- 9283
set.seed(my_seed)
options(scipen=999)
```

## Case study: Ota 2009

::: box-note
-   Data from [Ota 2009](https://doi.org/10.1016/j.cognition.2008.12.007).

-   L2 lexical representation of "near-homophones": ROCK/LOCK for Japanese speakers.
:::

![](/img/l1-l2-reps.png){fig-align="center"}

## Ota 2009: design

::: box-note
-   Semantic-relatedness task.

-   Pairs of written words presented visually.

    -   **Homophones**: SON/SUN \~ MOON

    -   **Near-homophones**: ROCK/LOCK \~ KEY

    -   **Minimal pairs**: PEAR/BEAR \~ FEAR
:::

. . .

::: box-warning
**Research hypotheses**

H1. The difference in RTs and accuracy between unrelated and control is the same in homophones (H) and near-homophones (LR).

H2. There is no difference in RTs and accuracy in minimal pairs (PB).
:::

## Ota 2009: the data

```{r}
#| label: ota2009

ota2009 <- read_csv("data/ota2009/key-rock.csv") |>
  filter(
    Procedure == "TrialProc", Contrast != "F"
  ) |>
  mutate(
    Subject = as.factor(Subject),
    RT_log = log(Words.RT),
    Item_id = paste(Version, Contrast, Item, sep = "_")
  )
ota2009
```

## Ota 2009: RTs

```{r}
#| label: fig-contr-cond

emo <- tibble(
  label = c("☀️-🌙", "👦-🌙", "🔒-🔑", "🪨-🔑", "🐻-😱", "🍐-😱"),
  Condition = c(rep(c("control", "unrelated"), 3)),
  Contrast = c(rep(c("H", "LR", "PB"), each = 2)),
  RT_log = 6.5
)

ota2009 |> 
  ggplot(aes(Contrast, RT_log)) +
  geom_violin(aes(fill = Condition), alpha = 0.2) +
  geom_jitter(
    aes(colour = Condition), alpha = 0.4,
    position = position_jitterdodge(jitter.width = 0.1, dodge.width = 0.9)
  ) +
  stat_summary(
    aes(group = Condition),
    position = position_dodge(width = 0.9),
    fun = "median", geom = "point", size = 3
  ) +
  geom_text(data = emo, aes(label = label, group = Condition), position = position_dodge(width = 0.9), size = 5)
```

## Log-normal regression (RTs)

```{r}
#| label: ota-bm-1
#| echo: true

my_seed <- 9283

ota_bm_1 <- brm(
  Words.RT ~ 0 + Condition:Contrast,
  family = lognormal,
  data = ota2009,
  seed = my_seed,
  cores = 4,
  file = "data/cache/ota_bm_1"
)
```

## Log-normal regression: summary

```{r}
#| label: ota-bm-1-sum

summary(ota_bm_1, prob = 0.9)
```

## Log-normal regression: expected predictions

```{r}
#| label: ota-bm-1-cond

conditional_effects(ota_bm_1, effects = "Contrast:Condition")

```

## BUT...

::: box-error
-   Multiple observations from different participants.

-   Multiple observations from items.
:::

. . .

::: box-tip
-   We need to include **varying terms** (also known as random or multilevel effects).

-   Regression models with varying terms are variably known as mixed-effects, multilevel, hierarchical, nested... They are all the same thing.
:::

## By-subject RTs

```{r}
#| label: subj-rts
#| fig_asp: 0.5

ota2009 |>
  filter(Contrast == "LR") |>
  ggplot(aes(Condition, RT_log)) +
  geom_jitter(
    aes(colour = Condition), alpha = 0.4,
    position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.9)
  ) +
  stat_summary(
    aes(group = Condition),
    position = position_dodge(width = 0.9),
    fun.data = "mean_cl_boot"
  ) +
  facet_wrap(~ Subject, nrow = 2) +
  theme(axis.text.x = element_blank(), legend.position = "bottom") +
  labs(title = "Log-RTs in the LR condition by subject")
```

## By-list RTs

```{r}
#| label: list-rts
#| fig_asp: 0.5

ota2009 |>
  filter(Contrast == "LR") |>
  ggplot(aes(Condition, RT_log)) +
  geom_jitter(
    aes(colour = Condition), alpha = 0.4,
    position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.9)
  ) +
  stat_summary(
    aes(group = Condition),
    position = position_dodge(width = 0.9),
    fun.data = "mean_cl_boot"
  ) +
  facet_grid(cols = vars(Version)) +
  theme(axis.text.x = element_blank(), legend.position = "bottom") +
  labs(title = "Log-RTs in the LR condition by list")
```

## By-subject and by-item varying terms

```{r}
#| label: ota-bm-2
#| echo: true

# took 80 seconds to fit
ota_bm_2 <- brm(
  Words.RT ~ 0 + Condition:Contrast +
    (0 + Condition:Contrast | Subject) +
    (0 + Condition:Contrast | Version),
  family = lognormal,
  data = ota2009,
  seed = my_seed,
  cores = 4,
  file = "data/cache/ota_bm_2"
)
```

## By-subject and by-item model: expected predictions

```{r}
#| label: ota-bm-2-sum
#| echo: true

fixef(ota_bm_2, probs = c(0.05, 0.95))
```

## By-subject and by-item model: expected predictions plot

```{r}
#| label: ota-bm-2-cond
conditional_effects(ota_bm_2, "Contrast:Condition")
```

## Difference between unrelated and control

```{r}
#| label: ota-bm-2-draws
ota_bm_2_draws <- as_draws_df(ota_bm_2, variable = "b_", regex = TRUE)
ota_bm_2_draws
```

## Difference between unrelated and control

```{r}
#| label: ota-bm-2-draws-diff
ota_bm_2_draws <- ota_bm_2_draws |> 
  mutate(
    diff_h = `b_ConditionUnrelated:ContrastH` - `b_ConditionControl:ContrastH`,
    diff_lr = `b_ConditionUnrelated:ContrastLR` - `b_ConditionControl:ContrastLR`,
    diff_pb = `b_ConditionUnrelated:ContrastPB` - `b_ConditionControl:ContrastPB`,
  )
```

## Difference between unrelated and control: plot

```{r}
#| label: ota-bm-2-draws-diff-plot
#| warning: false

ota_bm_2_draws |> 
  pivot_longer(diff_h:diff_pb) |> 
  ggplot(aes(value, name, fill = name)) +
  geom_vline(xintercept = 0) +
  stat_halfeye() +
  theme(legend.position = "none")
```

## Difference of difference LR/H

```{r}
ota_bm_2_draws <- ota_bm_2_draws |> 
  mutate(diff_lr_h = diff_lr - diff_h)

ota_bm_2_draws |> 
  ggplot(aes(diff_lr_h)) +
  geom_vline(xintercept = 0) +
  stat_halfeye()
```




## Summary

-   If the data contains groupings other than the ones that were manipulated in the design, you need to account for it.

-   The model must account for the fact that some data is from within a specific member of the group (like a participant, a specific word, etc).

-   You can account for groupings in the data with group-level effects. You should always include group-level intercept to account for mean differences across members of the groups.
