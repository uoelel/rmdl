{
  "hash": "6bcd1563f7383131ce3d73f076401af1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Research Methods in Developmental Linguistics -- Week 6\"\nauthor: \"Dr Stefano Coretta\"\ninstitute: \"University of Edinburgh\"\nformat:\n  mono-light-revealjs:\n    theme: [default, custom.scss]\n    history: false\nexecute: \n  echo: false\nknitr:\n  opts_chunk:\n    dev: \"ragg_png\"\nfilters: [\"tachyonsextra\"]\n---\n\n\n\n## Song 2020\n\n\n\n\n\n\n\n::: box-note\n-   Data from [Song 2020](https://doi.org/10.1017/S0272263120000170).\n\n-   Shallow morphological representation in L2 speakers.\n\n-   **Lexical decision task**: Is the word a real English word or not?\n\n-   **Priming paradigm**:\n\n    -   **Prime**: *prolong* (unrelated), *unkind* (constituent), *kindness* (non-constituent).\n\n    -   **Target**: *unkindness* (*\\[un-kind\\]-ness*, not *un-\\[kind-ness\\]*).\n\n-   English L1 and English L2/Cantonese L1 participants.\n:::\n\n## Song 2020: hypotheses\n\n::: box-warning\nVague hypothesis:\n\n> The Shallow Structure Hypothesis (SSH) allows the possibility for nonnative speakers to show strong priming effects from nonconstituent and constituent primes equally because the shallow processing route, which relies more heavily on semantic and surface-level information than on structural information.\n:::\n\n## Song 2020: the data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshallow <- read_csv(\"data/song2020/shallow.csv\") |>\n  filter(\n    Critical_Filler == \"Critical\",\n    Branching == \"Left\"\n  ) |> \n  mutate(\n    accuracy = ifelse(ACC == 0, \"incorrect\", \"correct\"),\n    accuracy = factor(accuracy, levels = c(\"incorrect\", \"correct\"))\n  )\nshallow\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,170 × 12\n   Group ID    List  Target         ACC    RT logRT Critical_Filler Word_Nonword\n   <chr> <chr> <chr> <chr>        <dbl> <dbl> <dbl> <chr>           <chr>       \n 1 L1    L1_01 A     unawareness      1   603  6.40 Critical        Word        \n 2 L1    L1_01 A     unholiness       1   739  6.61 Critical        Word        \n 3 L1    L1_01 A     unhappiness      1   370  5.91 Critical        Word        \n 4 L1    L1_01 A     unsharpness      1   821  6.71 Critical        Word        \n 5 L1    L1_01 A     unripeness       0  1035  6.94 Critical        Word        \n 6 L1    L1_01 A     unkindness       1   498  6.21 Critical        Word        \n 7 L1    L1_01 A     unwariness       1  1133  7.03 Critical        Word        \n 8 L1    L1_01 A     unclearness      1   513  6.24 Critical        Word        \n 9 L1    L1_01 A     reobtainable     0   964  6.87 Critical        Word        \n10 L1    L1_01 A     resealable       1   709  6.56 Critical        Word        \n# ℹ 1,160 more rows\n# ℹ 3 more variables: Relation_type <chr>, Branching <chr>, accuracy <fct>\n```\n\n\n:::\n:::\n\n\n\n## Song 2020: accuracy\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lecture-w06_files/figure-revealjs/shallow-acc-1.png){width=960}\n:::\n:::\n\n\n\n## Bernoulli regression (accuracy)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_seed <- 4235\n\nsha_bm_1 <- brm(\n  accuracy ~ 0 + Group:Relation_type,\n  family = bernoulli,\n  data = shallow,\n  cores = 4,\n  seed = my_seed,\n  file = \"data/cache/sha_bm_1\"\n)\n```\n:::\n\n\n\n## Bernoulli regression: expected predictions\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lecture-w06_files/figure-revealjs/sha-bm-1-cond-1.png){width=960}\n:::\n:::\n\n\n\n## BUT...\n\n::: box-error\n-   Multiple observations from different participants.\n\n-   Multiple observations from different target words.\n:::\n\n. . .\n\n::: box-tip\n-   We need to include **varying terms**.\n:::\n\n## By-subject accuracy\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lecture-w06_files/figure-revealjs/shallow-id-1.png){width=960}\n:::\n:::\n\n\n\n## By-target accuracy\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lecture-w06_files/figure-revealjs/shallow-target-1.png){width=960}\n:::\n:::\n\n\n\n## By-subject and by-target varying terms\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsha_bm_2 <- brm(\n  ACC ~ 0 + Group:Relation_type +\n    (0 + Relation_type | ID) +\n    (0 + Group:Relation_type | Target),\n  family = bernoulli,\n  data = shallow,\n  cores = 4,\n  seed = my_seed,\n  file = \"data/cache/sha_bm_2\"\n)\n```\n:::\n\n\n\n## By-subject and by-target model: expected predictions plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lecture-w06_files/figure-revealjs/sha-bm-2-conds-1.png){width=960}\n:::\n:::\n\n\n\n## Difference between non/constituent\n\n\n\n::: {.cell}\n\n:::\n\n\n\n## Difference between non/constituent: plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lecture-w06_files/figure-revealjs/sha-bm-diff-plot-1.png){width=960}\n:::\n:::\n",
    "supporting": [
      "lecture-w06_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}